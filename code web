<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Gi√°m s√°t N·ªìng ƒë·ªô C·ªìn</title>
    <link rel="stylesheet" href="css.css">
</head>
<body>
    <div class="container" id="monitoring">
        <h1>üöî Gi√°m S√°t N·ªìng ƒê·ªô C·ªìn üöî</h1>
        <div class="card">
            <p>N·ªìng ƒë·ªô c·ªìn: <span id="alcoholLevel" class="normal">0.00</span> </p>
            <p>M·ª©c ph·∫°t: <span id="fineAmount">Kh√¥ng vi ph·∫°m</span></p>
            <div id="violationForm" class="hidden">
                <p class="alert" id="violationMessage"></p>
                <input type="text" id="nameInput" placeholder="Nh·∫≠p h·ªç v√† t√™n">
                <button onclick="handleRecord()">L·∫≠p bi√™n b·∫£n</button>
                <button id="confirmButton" class="hidden" onclick="handleConfirm()">X√°c nh·∫≠n</button>
            </div>
        </div>
    </div>

    <!-- Th∆∞ vi·ªán MQTT -->
    <script src="https://unpkg.com/mqtt/dist/mqtt.min.js"></script>
    <!-- File x·ª≠ l√Ω ch√≠nh -->
    <script src="js.js"></script>
</body>
</html>


  code css.css

body {
    font-family: 'Arial', sans-serif;
    background: linear-gradient(135deg, #ff9a9e, #fad0c4);
    display: flex;
    justify-content: center;
    align-items: center;
    height: 100vh;
    margin: 0;
}

.container {
    text-align: center;
    background: #fff;
    padding: 25px;
    border-radius: 12px;
    box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
    width: 350px;
}

.hidden {
    display: none;
}

h1 {
    font-size: 22px;
    margin-bottom: 15px;
    color: #333;
}

.card {
    background: #f9f9f9;
    padding: 20px;
    border-radius: 8px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
}

p {
    font-size: 18px;
    font-weight: bold;
    margin: 10px 0;
}

.normal {
    color: green;
}

.high {
    color: red;
    font-size: 22px;
    font-weight: bold;
}

.alert {
    color: red;
    font-weight: bold;
    font-size: 18px;
    margin-top: 10px;
}

input {
    width: 80%;
    padding: 8px;
    margin-top: 10px;
    border-radius: 5px;
    border: 1px solid #ccc;
}

button {
    background: red;
    color: white;
    border: none;
    padding: 10px;
    width: 100%;
    margin-top: 10px;
    border-radius: 5px;
    cursor: pointer;
    font-size: 16px;
    transition: 0.3s;
}

button:hover {
    background: darkred;
}

#confirmButton {
    background: green;
}

#confirmButton:hover {
    background: darkgreen;
}

code js.js

document.addEventListener('DOMContentLoaded', function () {
    // K·∫øt n·ªëi MQTT
    const host = 'ws://172.20.10.5:9001';
    const options = {
        clean: true,
        connectTimeout: 4000,
        clientId: 'clientId-' + Math.random().toString(16).substr(2, 8),
    };

    const client = mqtt.connect(host, options);

    client.on("connect", () => {
        console.log("‚úÖ K·∫øt n·ªëi MQTT th√†nh c√¥ng");
        client.subscribe("sensor/bike");
        client.subscribe("sensor/car");
    });

    client.on("message", (topic, message) => {
        const alcoholLevelElement = document.getElementById("alcoholLevel");
        const fineAmountElement = document.getElementById("fineAmount");
        const violationFormElement = document.getElementById("violationForm");
        const confirmButton = document.getElementById("confirmButton");
        const violationMessage = document.getElementById("violationMessage");

        const alcoholLevel = parseFloat(message.toString()).toFixed(2);
        alcoholLevelElement.innerText = alcoholLevel + " PPM";

        let fineAmount = "Kh√¥ng vi ph·∫°m";
        let vehicleMessage = "";

        if (topic === "sensor/bike") {
            vehicleMessage = "üèçÔ∏è B·∫°n ƒë√£ l√°i xe m√°y vi ph·∫°m n·ªìng ƒë·ªô c·ªìn! Vui l√≤ng nh·∫≠p h·ªç v√† t√™n ƒë·ªÉ l·∫≠p bi√™n b·∫£n.";
            fineAmount = getFineAmount(alcoholLevel, "bike");
        } else if (topic === "sensor/car") {
            vehicleMessage = "üöó B·∫°n ƒë√£ l√°i √¥ t√¥ vi ph·∫°m n·ªìng ƒë·ªô c·ªìn! Vui l√≤ng nh·∫≠p h·ªç v√† t√™n ƒë·ªÉ l·∫≠p bi√™n b·∫£n.";
            fineAmount = getFineAmount(alcoholLevel, "car");
        }

        fineAmountElement.innerText = fineAmount;

        if (fineAmount !== "Kh√¥ng vi ph·∫°m") {
            alcoholLevelElement.classList.add("high");
            violationFormElement.classList.remove("hidden");
            confirmButton.classList.add("hidden");
            violationMessage.innerText = vehicleMessage;
        } else {
            alcoholLevelElement.classList.remove("high");
            violationFormElement.classList.add("hidden");
        }
    });

    // X√°c ƒë·ªãnh m·ª©c ph·∫°t d·ª±a tr√™n n·ªìng ƒë·ªô c·ªìn
    function getFineAmount(alcoholLevel, vehicleType) {
        alcoholLevel = parseFloat(alcoholLevel);
        if (alcoholLevel === 0) return "Kh√¥ng vi ph·∫°m";
        if (vehicleType === "bike") {
            if (alcoholLevel <= 0.25) return "2-3 tri·ªáu VND";
            else if (alcoholLevel <= 0.4) return "6-8 tri·ªáu VND";
            else return "8-10 tri·ªáu VND";
        } else {
            if (alcoholLevel <= 0.25) return "6-8 tri·ªáu VND";
            else if (alcoholLevel <= 0.4) return "18-20 tri·ªáu VND";
            else return "20-30 tri·ªáu VND";
        }
    }

    // Ki·ªÉm tra nh·∫≠p h·ªç t√™n tr∆∞·ªõc khi l·∫≠p bi√™n b·∫£n
    window.handleRecord = function () {
        const nameInputElement = document.getElementById("nameInput");
        const confirmButton = document.getElementById("confirmButton");
        const name = nameInputElement.value.trim();
        if (name !== "") {
            confirmButton.classList.remove("hidden");
        } else {
            alert("‚ö†Ô∏è Vui l√≤ng nh·∫≠p h·ªç v√† t√™n tr∆∞·ªõc khi l·∫≠p bi√™n b·∫£n!");
        }
    };

    // Xu·∫•t bi√™n b·∫£n XML khi nh·∫•n X√°c nh·∫≠n
    window.handleConfirm = function () {
        const name = document.getElementById("nameInput").value.trim();
        const alcoholLevel = document.getElementById("alcoholLevel").innerText.replace(" PPM", "");
        const fineAmount = document.getElementById("fineAmount").innerText;

        if (name === "") {
            alert("‚ö†Ô∏è Vui l√≤ng nh·∫≠p h·ªç v√† t√™n tr∆∞·ªõc khi xu·∫•t bi√™n b·∫£n!");
            return;
        }

        generateXMLDocument(name, alcoholLevel, fineAmount);

        // Reset l·∫°i giao di·ªán
        document.getElementById("nameInput").value = "";
        document.getElementById("alcoholLevel").innerText = "0.00 PPM";
        document.getElementById("fineAmount").innerText = "Kh√¥ng vi ph·∫°m";
        document.getElementById("alcoholLevel").classList.remove("high");
        document.getElementById("violationForm").classList.add("hidden");
        document.getElementById("confirmButton").classList.add("hidden");
    };

    // H√†m t·∫°o v√† t·∫£i bi√™n b·∫£n d∆∞·ªõi d·∫°ng XML
    function generateXMLDocument(name, alcoholLevel, fineAmount) {
        const xmlContent = `<?xml version="1.0" encoding="UTF-8"?>
<BienBanViPham>
    <ThongTinNguoiViPham>
        <HoTen>${name}</HoTen>
    </ThongTinNguoiViPham>
    
    <ChiTietViPham>
        <NongDoCon>${alcoholLevel} PPM</NongDoCon>
        <MucPhat>${fineAmount}</MucPhat>
    </ChiTietViPham>

    <ChuKy>
        <CanBo>X√°c nh·∫≠n t·∫°i hi·ªán tr∆∞·ªùng</CanBo>
        <NguoiViPham>__________________</NguoiViPham>
    </ChuKy>
</BienBanViPham>`;

        const blob = new Blob([xmlContent], { type: "application/xml" });
        const link = document.createElement("a");
        link.href = URL.createObjectURL(blob);
        link.download = `Bien_Ban_${name.replace(/\s+/g, "_")}.xml`;
        link.click();
    }
});
